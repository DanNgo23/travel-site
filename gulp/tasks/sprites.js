var gulp = require('gulp'),
svgSprite = require('gulp-svg-sprite'),
rename = require('gulp-rename'),
del = require('del'),
svg2png = require('gulp-svg2png');

var config = {
    shape: {
        spacing: {
            /* adjust the sprite file so there is 1 pixel of padding or */
            /* spacing in between the different icons */
            padding: 1
        }
    },
    /* in order for the svgSprite package to do anything useful, */
    /* we need to tell it in our config object which mode it should use */
    mode: {
        css: {
            
            variables: {
              /* come up with any name we want for our filter function */
              replaceSvgWithPng: function() {
                return function(sprite, render) {
                    return render(sprite).split('.svg').join('.png');
                }
              }
            },
            /* provide a path and file name that we want to use */
            /* we are removing the .css from the file name */
            sprite: 'sprite.svg', 
            /* within the css property, let's tell it to render our css for us */
            render: {
                /* tell the package that we want it to use css */
                css: {
                    /* provide the package with a css template file */
                    /* the package will fill in blanks in our template with information about each icon */
                    /* provide a path to the new file we manually created */
                    template: './gulp/templates/sprite.css'
                }
            }
        }
    }
};

/* begin our sequence by deleting the old app/temp/sprite folder to replace it with a new one later */
/* this prevents any old outdated copies of the sprite graphic sitting next to the newest copy */
gulp.task('beginClean', function(){
    /* within the delete method, we can provide an array of folders we want to delete*/
    del(['./app/temp/sprite', './app/assets/images/sprites']);
});

/* we also need to list the beginClean task as a dependency */
gulp.task('createSprite', ['beginClean'], function() {
    /* use gulp source to move all the icon files into gulp's pipeline */
    /* whenever we use gulp.src, we should begin with return */
    /* we give source a path that points to all the icon files */
    /* the ** means any subfolders in icons folder and *.svg means any svg file */
    return gulp.src('./app/assets/images/icons/**/*.svg')
        /* pipe() means we actually do something with the files */
        /* while the files are traveling through gulp's pipeline, we want to transform them in some way */
        /* need to pass the svgSprite package in order for it to do anything useful */
        .pipe(svgSprite(config))
        /* before we create the actual sprite, let's copy those files to a new location, */
        /* inside the temp folder that lives within our app folder */
        /* in destination, we pass in a path to the temp folder */
        /* we create a sprite folder for it to copy into */
        .pipe(gulp.dest('./app/temp/sprite/'));
});

/* list the createSprite task as a dependency */
gulp.task('createPngCopy', ['createSprite'], function() {
    /* we use gulp.src() (src for source) to point towards the file we want to begin w/ or do something w/ */
    /* because the file name is dynamic, we grab any file that has an svg extension */
    return gulp.src('./app/temp/sprite/css/*.svg')
        /* pipe this file through the package we downloaded */
        .pipe(svg2png())
        /* pipe the file that the svg2png() will create to our destination folder */
        .pipe(gulp.dest('./app/temp/sprite/css'));
    
});

/* make sure this task considers the createPngCopy task as a dependency using the second argument */
gulp.task('copySpriteGraphic', ['createPngCopy'], function() {
    /* point towards the svg and png images we want to move or copy */
    return gulp.src('./app/temp/sprite/css/**/*.{svg,png}')
        /* our sprite graphic now lives at this desired location */
        .pipe(gulp.dest('./app/assets/images/sprites'));
});

/* the dependencies argument in the square brackets lists any task that this task depends on */
gulp.task('copySpriteCSS', ['createSprite'], function() {
    /* provide a path to the autogenerated sprite css file */
    return gulp.src('./app/temp/sprite/css/*.css')
        /* rename the file before it reaches its destination */
        .pipe(rename('_sprite.css'))
        /* copy the file to a new folder */
        .pipe(gulp.dest('./app/assets/styles/modules'));
});

/* by the time our icon sequnce of tasks is complete, we've moved the autogenerated assets into their new appropriate folders */
/* by the end of the sequence from beginClean to copySpriteCSS, we no longer need the temps/sprite folder at all
/* once all those previous 4 tasks have ran, we simply want to delete the app/temp/sprite folder */
/* need to make sure endClean doesn't run until the previous two tasks are complete */
gulp.task('endClean', ['copySpriteGraphic', 'copySpriteCSS'], function() {
    return del('./app/temp/sprite');
});

/* run all tasks with one command */
/* gulp will begin with one task and then wait for it to complete before the next task */
gulp.task('icons', ['beginClean', 'createSprite', 'createPngCopy', 'copySpriteGraphic', 'copySpriteCSS', 'endClean']);
